<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>antd+react实现断点续传</title>
    <url>/2020/11/28/antd+react%E5%AE%9E%E7%8E%B0%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/</url>
    <content><![CDATA[<h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>文件上传之后，获得文件的唯一标识（MD5值），将文件切割成多个分块，根据文件标识查询文件未上传的分块，所有分块上传完之后，将分块进行合并。</p>
<h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><h5 id="1、上传文件"><a href="#1、上传文件" class="headerlink" title="1、上传文件"></a>1、上传文件</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> uploadProps = &#123;</span><br><span class="line">    name: <span class="string">"file"</span>,</span><br><span class="line">    accept: <span class="string">".zip"</span>,</span><br><span class="line">    maxCount: <span class="number">1</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dragger</span> &#123;<span class="attr">...uploadProps</span>&#125;&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">"ant-upload-drag-icon"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">InboxOutlined</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">"ant-upload-text"</span>&gt;</span>点击或将文件拖拽到这里上传<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">"ant-upload-hint"</span>&gt;</span></span><br><span class="line">    支持文件扩展名：.zip</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dragger</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="2、文件预处理"><a href="#2、文件预处理" class="headerlink" title="2、文件预处理"></a>2、文件预处理</h5><p>在文件上传之前，beforeUpload里对文件进行切割预处理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 兼容性的处理</span><br><span class="line">           const blobSlice &#x3D; File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;</span><br><span class="line">           const chunkSize &#x3D; 1024 * 1024 * 5; &#x2F;&#x2F; 切片每次5M</span><br><span class="line">           const chunks &#x3D; Math.ceil(file.size &#x2F; chunkSize);</span><br><span class="line">           let currentChunk &#x3D; 0; &#x2F;&#x2F; 当前上传的chunk</span><br><span class="line">           const spark &#x3D; new SparkMD5.ArrayBuffer();</span><br><span class="line">           &#x2F;&#x2F; 对arrayBuffer数据进行md5加密，产生一个md5字符串</span><br><span class="line">           const chunkFileReader &#x3D; new FileReader(); &#x2F;&#x2F; 用于计算出每个chunkMd5</span><br><span class="line">           const params &#x3D; &#123; chunks: [], file: &#123;&#125;&#125;; &#x2F;&#x2F; 用于上传所有分片的md5信息</span><br><span class="line">           const arrayBufferDataT &#x3D; []; &#x2F;&#x2F; 用于存储每个chunk的arrayBuffer对象,用于分片上传使用</span><br><span class="line">		&#x2F;* 文件合并所需参数 *&#x2F;</span><br><span class="line">           params.file.fileName &#x3D; file.name; &#x2F;&#x2F; 文件名</span><br><span class="line">           params.file.totalSize &#x3D; file.size; &#x2F;&#x2F; 文件总大小</span><br><span class="line">           params.file.fileType &#x3D; file.type; &#x2F;&#x2F; 文件类型</span><br><span class="line">           params.file.relativePath &#x3D; file.name; &#x2F;&#x2F; 相对路径</span><br><span class="line">           params.file.refProjectId &#x3D; &quot;dbxt-sf-gd-sz&quot;; &#x2F;&#x2F; 文件唯一标识</span><br><span class="line"></span><br><span class="line">           function loadNext()</span><br><span class="line">           &#123;</span><br><span class="line">               const start &#x3D; currentChunk * chunkSize;</span><br><span class="line">               const end &#x3D; ((start + chunkSize) &gt;&#x3D; file.size) ? file.size : start + chunkSize;</span><br><span class="line">               chunkFileReader.readAsArrayBuffer(blobSlice.call(file, start, end));</span><br><span class="line">           &#125;</span><br><span class="line">           loadNext();</span><br><span class="line">           let identifier;</span><br><span class="line">           chunkFileReader.onload &#x3D; function(e)</span><br><span class="line">           &#123;</span><br><span class="line">               &#x2F;&#x2F; 对每一片分片进行md5加密</span><br><span class="line">               if (currentChunk &#x3D;&#x3D;&#x3D; 0)</span><br><span class="line">               &#123;</span><br><span class="line">                   spark.append(e.target.result);</span><br><span class="line">                   identifier &#x3D; spark.end();</span><br><span class="line">               &#125;</span><br><span class="line">               &#x2F;&#x2F; 每一个分片需要包含的信息</span><br><span class="line">               const obj &#x3D; &#123;</span><br><span class="line">                   totalSize: file.size,</span><br><span class="line">                   relativePath: file.name,</span><br><span class="line">                   chunkNumber: currentChunk + 1, &#x2F;&#x2F; 块编号</span><br><span class="line">                   fileName: file.name,</span><br><span class="line">                   identifier, &#x2F;&#x2F; 块编号</span><br><span class="line">                   totalChunks: chunks, &#x2F;&#x2F; 总分片数</span><br><span class="line">                   chunkSize, &#x2F;&#x2F; 块大小</span><br><span class="line">                   currentChunkSize: ((currentChunk * chunkSize + chunkSize) &gt;&#x3D; file.size) ? file.size - currentChunk * 							chunkSize : chunkSize &#x2F;&#x2F; 当前块大小</span><br><span class="line">               &#125;;</span><br><span class="line">               &#x2F;&#x2F; 每一次分片onload,currentChunk都需要增加，以便来计算分片的次数</span><br><span class="line">               currentChunk +&#x3D; 1;</span><br><span class="line">               params.chunks.push(obj);</span><br><span class="line"></span><br><span class="line">               &#x2F;&#x2F; 将每一块分片的arrayBuffer存储起来，用来partUpload</span><br><span class="line">               const tmp &#x3D; &#123;</span><br><span class="line">                   chunk: obj.chunkNumber,</span><br><span class="line">                   currentBuffer: e.target.result</span><br><span class="line">               &#125;;</span><br><span class="line">               arrayBufferDataT.push(tmp);</span><br><span class="line">               if (currentChunk &lt; chunks)</span><br><span class="line">               &#123;</span><br><span class="line">               &#x2F;&#x2F; 当前切片总数没有达到总数时</span><br><span class="line">                   loadNext();</span><br><span class="line">                   &#x2F;&#x2F; 计算预处理进度</span><br><span class="line">                   setpreUploading(true);</span><br><span class="line">                   setpreUploadPercent(Number((currentChunk &#x2F; chunks * 100).toFixed(2)));</span><br><span class="line">               &#125;</span><br><span class="line">               else</span><br><span class="line">               &#123;</span><br><span class="line">                   setchunksSize(chunks);</span><br><span class="line">                   setpreUploadPercent(100);</span><br><span class="line">                   setFileList([file]);</span><br><span class="line">                   &#x2F;&#x2F; 记录所有chunks的长度</span><br><span class="line">                   params.file.identifier &#x3D; identifier;</span><br><span class="line">                   params.file.fileChunks &#x3D; params.chunks.length;</span><br><span class="line">                   &#x2F;&#x2F; 表示预处理结束，将上传的参数，arrayBuffer的数据存储起来</span><br><span class="line">                   setarrayBufferData(arrayBufferDataT);</span><br><span class="line">                   setpreUploading(false);</span><br><span class="line">                   setuploadParams(params);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;;</span><br><span class="line"></span><br><span class="line">           chunkFileReader.onerror &#x3D; function()</span><br><span class="line">           &#123;</span><br><span class="line">               console.warn(&quot;oops, something went wrong.&quot;);</span><br><span class="line">           &#125;;</span><br></pre></td></tr></table></figure>

<h5 id="3、上传分块"><a href="#3、上传分块" class="headerlink" title="3、上传分块"></a>3、上传分块</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 判断是否上传</span><br><span class="line">    const data &#x3D; await examChunk(chunks[0]);</span><br><span class="line">    let &#123; uploadedChunks &#125; &#x3D; data || []; &#x2F;&#x2F; 已上传文件</span><br><span class="line">    uploadedChunks &#x3D; Array.from(new Set(uploadedChunks));</span><br><span class="line">    if (uploadedChunks.length &#x3D;&#x3D;&#x3D; uploadParams.file.fileChunks || data.skipUpload) &#x2F;&#x2F; 如果全部文件快已上传 则直接完成 实现秒传</span><br><span class="line">    &#123;</span><br><span class="line">        setuploadPercent(100); &#x2F;&#x2F; 文件上传进度</span><br><span class="line">        mergeFile();&#x2F;&#x2F; 合并文件</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        setuploadPercent(Number((uploadedChunks.length &#x2F; uploadParams.file.fileChunks * 100).toFixed(2)));</span><br><span class="line">        const uploadList &#x3D; chunks.filter(item &#x3D;&gt; &#123; return uploadedChunks.indexOf(item.chunkNumber) &lt; 0; &#125;);&#x2F;&#x2F; 过滤出未上传分片</span><br><span class="line">        handlePartUpload(uploadList, uploadList.length); &#x2F;&#x2F; 分片上传</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">catch (error)</span><br><span class="line">&#123;</span><br><span class="line">    console.log(error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 分片上传</span><br><span class="line">const handlePartUpload &#x3D; (uploadList, currentChunks) &#x3D;&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        let current &#x3D; currentChunks;</span><br><span class="line">        uploadList.forEach(async(element) &#x3D;&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            const blobSlice &#x3D; File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;</span><br><span class="line">            const &#123; identifier, chunkNumber &#125; &#x3D; element;</span><br><span class="line">            const formData &#x3D; new FormData();</span><br><span class="line">            &#x2F;&#x2F; 新建一个Blob对象，将对应分片的arrayBuffer加入Blob中</span><br><span class="line">            const blob &#x3D; new Blob([arrayBufferData[chunkNumber - 1].currentBuffer], &#123; type: &quot;application&#x2F;octet-stream&quot; &#125;);</span><br><span class="line">            &#x2F;&#x2F; 将生成blob塞入到formdata中传入服务端</span><br><span class="line">            formData.append(&quot;upfile&quot;, blob, identifier);</span><br><span class="line">            Object.keys(element).forEach(el &#x3D;&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                formData.append(el, element[el]);</span><br><span class="line">            &#125;);</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                const uploadData &#x3D; await upload(formData);</span><br><span class="line">                if (uploadData &#x3D;&#x3D;&#x3D; 200)</span><br><span class="line">                &#123;</span><br><span class="line">                    current -&#x3D; 1;</span><br><span class="line">                    setuploadPercent(Number(((uploadParams.file.fileChunks - current) &#x2F; uploadParams.file.fileChunks * 100).toFixed(2)));</span><br><span class="line">                    if (current &#x3D;&#x3D;&#x3D; 0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        mergeFile();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    setUploadFailed(true);</span><br><span class="line">                    setspinning(false);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (error)</span><br><span class="line">            &#123;</span><br><span class="line">                setUploadFailed(true);</span><br><span class="line">                setspinning(false);</span><br><span class="line">                console.log(error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>



<h5 id="4、合并文件块"><a href="#4、合并文件块" class="headerlink" title="4、合并文件块"></a>4、合并文件块</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const mergeFile &#x3D; async() &#x3D;&gt;</span><br><span class="line">&#123;</span><br><span class="line">    try</span><br><span class="line">    &#123;</span><br><span class="line">        const mergeData &#x3D; await merge(uploadParams.file);</span><br><span class="line">        if (mergeData.id)</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F; setUpfileId(mergeData.id);</span><br><span class="line">            &#x2F;&#x2F; message.success(&#39;上传成功&#39;);</span><br><span class="line">            createData(mergeData.id);</span><br><span class="line">            setuploading(false);</span><br><span class="line">            setuploaded(true);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            setspinning(false);</span><br><span class="line">            setUploadFailed(true);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    catch (error)</span><br><span class="line">    &#123;</span><br><span class="line">        setspinning(false);</span><br><span class="line">        setUploadFailed(true);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>react,antd,断点续传</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>canvas画布实现烟花绽放效果</title>
    <url>/2020/11/28/canvas%E7%94%BB%E5%B8%83%E5%AE%9E%E7%8E%B0%E7%83%9F%E8%8A%B1%E7%BB%BD%E6%94%BE%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="http://image.berlin4h.top/images/2020/11/27/GIF-2020-11-27--17-48-40.gif" alt=""></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>项目有个场景需求是要实现点击时，出现烟花绽放的效果，在网上百度了很多关于烟花的效果图，免费的不好看，好看的要钱，贫穷的打工人选择自己上手。</p>
<h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><h5 id="1、分解"><a href="#1、分解" class="headerlink" title="1、分解"></a>1、分解</h5><p>将所有烟花都分解成一个类似水滴形状的瓣，控制它的大小、坐标和旋转角度，叠加在一起就成了一朵好看的烟花。一个瓣可以看做是两条弯曲的曲线构成，曲线可由三次贝塞尔曲线绘制。</p>
<h5 id="2、水平绘制"><a href="#2、水平绘制" class="headerlink" title="2、水平绘制"></a>2、水平绘制</h5><p>假设初始坐标值为（x，y），瓣的宽度为w，高度为h，第一个拐角点设在宽度0.9位置（经过我的多次测试，这个位置绘制出的烟花最好看！）。</p>
<p><img src="http://image.berlin4h.top/images/2020/11/28/20201128112506.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctx.beginPath();</span><br><span class="line">ctx.moveTo(x,y); &#x2F;&#x2F; 先将点放到初始坐标值</span><br><span class="line">ctx.bezierCurveTo(x+w*0.9，y-h&#x2F;2，x+w, y-h&#x2F;2, x+w,y); </span><br><span class="line">ctx.bezierCurveTo(x+w,y+h&#x2F;2,x+w*0.9,y+h&#x2F;2,x,y);&#x2F;&#x2F; 第二条曲线以第一条曲线的结束点为起始点</span><br></pre></td></tr></table></figure>

<h5 id="3、旋转角度"><a href="#3、旋转角度" class="headerlink" title="3、旋转角度"></a>3、旋转角度</h5><p>假设旋转角度为45度，如图计算出每个坐标的坐标值。</p>
<p><img src="http://image.berlin4h.top/images/2020/11/28/20201128120150.png" alt=""></p>
<h5 id="4、花瓣合成"><a href="#4、花瓣合成" class="headerlink" title="4、花瓣合成"></a>4、花瓣合成</h5><p>一层烟花由八朵烟花花瓣组成，分为左、右、上、下、左上、右上、左下、右下。由于canvas画布的坐标只有正数没有负数，因此可以计算出：</p>
<p>// 左 及 左上<br>目标横坐标 = 初始位置横坐标 - 对应点横坐标<br>目标纵坐标 = 初始位置纵坐标 - 对应点点纵坐标<br>// 上 及 右上<br>目标横坐标 = 初始位置横坐标 + 对应点点横坐标<br>目标纵坐标 = 初始位置纵坐标 - 对应点点纵坐标<br>// 右 及 右下<br>目标横坐标 = 初始位置横坐标 + 对应点点横坐标<br>目标纵坐标 = 初始位置纵坐标 + 对应点点纵坐标<br>// 下 及 左下<br>目标横坐标 = 初始位置横坐标 - 对应点点横坐标<br>目标纵坐标 = 初始位置纵坐标 + 对应点点纵坐标</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设a为偏移的角度，（x，y)为起始点坐标值，h为花瓣高度，w为花瓣宽度</span></span><br><span class="line"><span class="comment">// 左边花瓣代码示例</span></span><br><span class="line"><span class="keyword">var</span> angel = a;<span class="comment">//偏移的角度</span></span><br><span class="line"><span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p1x = x - ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line"><span class="keyword">var</span> p1y = y - (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line"><span class="keyword">var</span> p2x = x - ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line"><span class="keyword">var</span> p2y = y - (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line"><span class="keyword">var</span> p3x = x - w * cosAngel;</span><br><span class="line"><span class="keyword">var</span> p3y = y - w * sinAngel;</span><br><span class="line"><span class="keyword">var</span> p4x = x - ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line"><span class="keyword">var</span> p4y = y - (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line"><span class="keyword">var</span> p5x = x - ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line"><span class="keyword">var</span> p5y = y - (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">ctx.beginPath();</span><br><span class="line">ctx.moveTo(x,y);</span><br><span class="line">ctx.stroke();</span><br><span class="line">ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">ctx.closePath();</span><br><span class="line">ctx.fillStyle = color;</span><br><span class="line">ctx.fill();</span><br></pre></td></tr></table></figure>

<h5 id="5、圆点坐标值"><a href="#5、圆点坐标值" class="headerlink" title="5、圆点坐标值"></a>5、圆点坐标值</h5><p>烟花可看做一圈一圈不同半径上的点为起始坐标的花瓣组成，每一圈有八个花瓣，根据三角函数可计算出点的坐标。</p>
<p><img src="http://image.berlin4h.top/images/2020/11/28/20201128135626.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设偏移角度为angle，圆心坐标为(x,y)，半径为r</span></span><br><span class="line"><span class="comment">// 左</span></span><br><span class="line"><span class="keyword">var</span> p1x = x - r * <span class="built_in">Math</span>.cos(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p1y = y - r * <span class="built_in">Math</span>.sin(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="comment">// 右</span></span><br><span class="line"><span class="keyword">var</span> p2x = x + r * <span class="built_in">Math</span>.cos(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p2y = y + r * <span class="built_in">Math</span>.sin(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="comment">// 上</span></span><br><span class="line"><span class="keyword">var</span> p3x = x + r * <span class="built_in">Math</span>.sin(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p3y = y - r * <span class="built_in">Math</span>.cos(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="comment">// 下</span></span><br><span class="line"><span class="keyword">var</span> p4x = x - r * <span class="built_in">Math</span>.sin(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p4y = y + r * <span class="built_in">Math</span>.cos(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="comment">// 左上</span></span><br><span class="line"><span class="keyword">var</span> p5x = x - r * <span class="built_in">Math</span>.cos((angle + <span class="number">45</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p5y = y - r * <span class="built_in">Math</span>.sin((angle + <span class="number">45</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="comment">// 右上</span></span><br><span class="line"><span class="keyword">var</span> p6x = x + r * <span class="built_in">Math</span>.cos((<span class="number">45</span> - angle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p6y = y - r * <span class="built_in">Math</span>.sin((<span class="number">45</span> - angle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="comment">// 左下</span></span><br><span class="line"><span class="keyword">var</span> p7x = x - r * <span class="built_in">Math</span>.cos((<span class="number">45</span> - angle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p7y = y + r * <span class="built_in">Math</span>.sin((<span class="number">45</span> - angle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="comment">// 右下</span></span><br><span class="line"><span class="keyword">var</span> p8x = x + r * <span class="built_in">Math</span>.cos((angle + <span class="number">45</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line"><span class="keyword">var</span> p8y = y + r * <span class="built_in">Math</span>.sin((angle + <span class="number">45</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br></pre></td></tr></table></figure>

<h5 id="6、最终实现"><a href="#6、最终实现" class="headerlink" title="6、最终实现"></a>6、最终实现</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 圆心横坐标、    圆心纵坐标、   半径、   偏移角度、     瓣高  、     瓣宽、    颜色 </span></span><br><span class="line"><span class="comment">// 第一圈</span></span><br><span class="line">calcEight(pointR, pointR, canvasW * <span class="number">0.05</span>, <span class="number">1</span>,canvasW * <span class="number">0.02</span>, canvasW * <span class="number">0.15</span>, <span class="string">"#E4AF6A"</span>);</span><br><span class="line">calcEight(pointR, pointR, canvasW * <span class="number">0.05</span>, <span class="number">11</span>,canvasW * <span class="number">0.02</span>, canvasW * <span class="number">0.15</span>, <span class="string">"#F8EEB0"</span>);</span><br><span class="line"><span class="comment">// 第二圈</span></span><br><span class="line">calcEight(pointR, pointR, canvasW * <span class="number">0.1</span>, <span class="number">28</span>,canvasW * <span class="number">0.08</span>, canvasW * <span class="number">0.35</span>, <span class="string">"#E4AF6A"</span>);</span><br><span class="line">calcEight(pointR, pointR, canvasW * <span class="number">0.1</span>, <span class="number">36</span>,canvasW * <span class="number">0.08</span>, canvasW * <span class="number">0.35</span>, <span class="string">"#F8EEB0"</span>);</span><br><span class="line"><span class="comment">// 第三圈</span></span><br><span class="line">calcEight(pointR, pointR, canvasW * <span class="number">0.075</span>, <span class="number">20</span>,canvasW * <span class="number">0.058</span>, canvasW * <span class="number">0.3</span>, <span class="string">"#E4AF6A"</span>);</span><br><span class="line">calcEight(pointR, pointR, canvasW * <span class="number">0.075</span>, <span class="number">28</span>,canvasW * <span class="number">0.058</span>, canvasW * <span class="number">0.3</span>, <span class="string">"#F8EEB0"</span>);</span><br><span class="line"><span class="comment">// 第四圈</span></span><br><span class="line">calcEight(pointR, pointR,  canvasW * <span class="number">0.29</span>, <span class="number">9</span>,canvasW * <span class="number">0.03</span>, canvasW * <span class="number">0.2</span>, <span class="string">"#E4AF6A"</span>);</span><br><span class="line">calcEight(pointR, pointR,  canvasW * <span class="number">0.29</span>, <span class="number">1</span>,canvasW * <span class="number">0.03</span>, canvasW * <span class="number">0.2</span>, <span class="string">"#F8EEB0"</span>);</span><br><span class="line"><span class="comment">// 左</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw1</span>(<span class="params">x,y,h,w, r,a,color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> angel = a;</span><br><span class="line">    <span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1x = x - ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p1y = y - (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p2x = x - ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p2y = y - (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line">    <span class="keyword">var</span> p3x = x - w * cosAngel;</span><br><span class="line">    <span class="keyword">var</span> p3y = y - w * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p4x = x - ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p4y = y - (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p5x = x - ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p5y = y - (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(x,y);</span><br><span class="line">    ctx.stroke();</span><br><span class="line">    ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">    ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">    ctx.closePath();</span><br><span class="line">    ctx.fillStyle = color;</span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 右</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw2</span>(<span class="params">x,y,h,w, r,a,color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> angel = a;</span><br><span class="line">    <span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1x = x + ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p1y = y + (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p2x = x + ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p2y = y + (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line">    <span class="keyword">var</span> p3x = x + w * cosAngel;</span><br><span class="line">    <span class="keyword">var</span> p3y = y + w * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p4x = x + ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p4y = y + (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p5x = x + ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p5y = y + (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(x,y);</span><br><span class="line">    ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">    ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">    ctx.closePath();</span><br><span class="line">    ctx.fillStyle = color;</span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 上</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw3</span>(<span class="params">x,y,h,w, r,a,color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> angel = <span class="number">90</span> - a;</span><br><span class="line">    <span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1x = x + ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p1y = y - (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p2x = x + ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p2y = y - (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line">    <span class="keyword">var</span> p3x = x + w * cosAngel;</span><br><span class="line">    <span class="keyword">var</span> p3y = y - w * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p4x = x + ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p4y = y - (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p5x = x + ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p5y = y - (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(x,y);</span><br><span class="line">    ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">    ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">    ctx.closePath();</span><br><span class="line">    ctx.fillStyle = color;</span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 下</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw4</span>(<span class="params">x,y,h,w, r,a,color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> angel = <span class="number">90</span> - a;</span><br><span class="line">    <span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1x = x - ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p1y = y + (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p2x = x - ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p2y = y + (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line">    <span class="keyword">var</span> p3x = x - w * cosAngel;</span><br><span class="line">    <span class="keyword">var</span> p3y = y + w * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p4x = x - ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p4y = y + (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p5x = x - ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p5y = y + (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(x,y);</span><br><span class="line">    ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">    ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">    ctx.closePath();</span><br><span class="line">    ctx.fillStyle = color;</span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 左上</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw5</span>(<span class="params">x,y,h,w, r,a,color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> angel = a + <span class="number">45</span>;</span><br><span class="line">    <span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1x = x - ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p1y = y - (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p2x = x - ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p2y = y - (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line">    <span class="keyword">var</span> p3x = x - w * cosAngel;</span><br><span class="line">    <span class="keyword">var</span> p3y = y - w * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p4x = x - ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p4y = y - (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p5x = x - ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p5y = y - (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(x,y);</span><br><span class="line">    ctx.stroke();</span><br><span class="line">    ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">    ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">    ctx.closePath();</span><br><span class="line">    ctx.fillStyle = color;</span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 右上</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw6</span>(<span class="params">x,y,h,w, r,a,color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> angel = <span class="number">45</span> - a;</span><br><span class="line">    <span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1x = x + ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p1y = y - (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p2x = x + ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p2y = y - (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line">    <span class="keyword">var</span> p3x = x + w * cosAngel;</span><br><span class="line">    <span class="keyword">var</span> p3y = y - w * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p4x = x + ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p4y = y - (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p5x = x + ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p5y = y - (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(x,y);</span><br><span class="line">    ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">    ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">    ctx.closePath();</span><br><span class="line">    ctx.fillStyle = color;</span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 左下</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw7</span>(<span class="params">x,y,h,w, r,a,color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> angel = <span class="number">45</span> - a;</span><br><span class="line">    <span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1x = x - ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p1y = y + (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p2x = x - ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p2y = y + (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line">    <span class="keyword">var</span> p3x = x - w * cosAngel;</span><br><span class="line">    <span class="keyword">var</span> p3y = y + w * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p4x = x - ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p4y = y + (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p5x = x - ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p5y = y + (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(x,y);</span><br><span class="line">    ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">    ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">    ctx.closePath();</span><br><span class="line">    ctx.fillStyle = color;</span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 右下</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw8</span>(<span class="params">x,y,h,w, r,a,color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> angel = <span class="number">45</span> + a;</span><br><span class="line">    <span class="keyword">var</span> sinAngel = <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> cosAngel = <span class="built_in">Math</span>.cos(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> tanAngel = <span class="built_in">Math</span>.tan(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> hypotenuse = h / <span class="number">2</span> / <span class="built_in">Math</span>.sin(angel*<span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1x = x + ((w * rate - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p1y = y + (w * rate - h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p2x = x + ((w - h / <span class="number">2</span> / tanAngel) * cosAngel + hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p2y = y + (w - h / <span class="number">2</span> / tanAngel) * sinAngel ;</span><br><span class="line">    <span class="keyword">var</span> p3x = x + w * cosAngel;</span><br><span class="line">    <span class="keyword">var</span> p3y = y + w * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p4x = x + ((w + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p4y = y + (w + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    <span class="keyword">var</span> p5x = x + ((w * rate + h / <span class="number">2</span> / tanAngel) * cosAngel - hypotenuse);</span><br><span class="line">    <span class="keyword">var</span> p5y = y + (w * rate + h / <span class="number">2</span> / tanAngel) * sinAngel;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.moveTo(x,y);</span><br><span class="line">    ctx.bezierCurveTo(p1x,p1y,p2x, p2y,p3x,p3y);</span><br><span class="line">    ctx.bezierCurveTo(p4x, p4y,p5x,p5y,x,y);</span><br><span class="line">    ctx.closePath();</span><br><span class="line">    ctx.fillStyle = color;</span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calcEight</span>(<span class="params">x,y,r, angle,h, w, color</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 左</span></span><br><span class="line">    <span class="keyword">var</span> p1x = x - r * <span class="built_in">Math</span>.cos(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p1y = y - r * <span class="built_in">Math</span>.sin(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 右</span></span><br><span class="line">    <span class="keyword">var</span> p2x = x + r * <span class="built_in">Math</span>.cos(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p2y = y + r * <span class="built_in">Math</span>.sin(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 上</span></span><br><span class="line">    <span class="keyword">var</span> p3x = x + r * <span class="built_in">Math</span>.sin(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p3y = y - r * <span class="built_in">Math</span>.cos(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 下</span></span><br><span class="line">    <span class="keyword">var</span> p4x = x - r * <span class="built_in">Math</span>.sin(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p4y = y + r * <span class="built_in">Math</span>.cos(angle * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 左上</span></span><br><span class="line">    <span class="keyword">var</span> p5x = x - r * <span class="built_in">Math</span>.cos((angle + <span class="number">45</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p5y = y - r * <span class="built_in">Math</span>.sin((angle + <span class="number">45</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 右上</span></span><br><span class="line">    <span class="keyword">var</span> p6x = x + r * <span class="built_in">Math</span>.cos((<span class="number">45</span> - angle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p6y = y - r * <span class="built_in">Math</span>.sin((<span class="number">45</span> - angle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 左下</span></span><br><span class="line">    <span class="keyword">var</span> p7x = x - r * <span class="built_in">Math</span>.cos((<span class="number">45</span> - angle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p7y = y + r * <span class="built_in">Math</span>.sin((<span class="number">45</span> - angle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 右下</span></span><br><span class="line">    <span class="keyword">var</span> p8x = x + r * <span class="built_in">Math</span>.cos((angle + <span class="number">45</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="keyword">var</span> p8y = y + r * <span class="built_in">Math</span>.sin((angle + <span class="number">45</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 左</span></span><br><span class="line">    draw1(p1x, p1y, h, w, <span class="built_in">Math</span>.PI,angle,color);</span><br><span class="line">    <span class="comment">// 右</span></span><br><span class="line">    draw2(p2x, p2y, h, w, <span class="built_in">Math</span>.PI,angle,color);</span><br><span class="line">    <span class="comment">// 上</span></span><br><span class="line">    draw3(p3x, p3y, h, w, <span class="built_in">Math</span>.PI / <span class="number">2</span>,angle,color);</span><br><span class="line">    <span class="comment">// 下</span></span><br><span class="line">    draw4(p4x, p4y, h, w, <span class="built_in">Math</span>.PI / <span class="number">2</span>,angle,color);</span><br><span class="line">    <span class="comment">// 左上</span></span><br><span class="line">    draw5(p5x, p5y, h, w, <span class="built_in">Math</span>.PI,angle,color);</span><br><span class="line">    <span class="comment">// 右上</span></span><br><span class="line">    draw6(p6x, p6y, h, w, <span class="built_in">Math</span>.PI,angle,color);</span><br><span class="line">    <span class="comment">// 左下</span></span><br><span class="line">    draw7(p7x, p7y, h, w, <span class="built_in">Math</span>.PI / <span class="number">2</span>,angle,color);</span><br><span class="line">    <span class="comment">// 右下</span></span><br><span class="line">    draw8(p8x, p8y, h, w, <span class="built_in">Math</span>.PI / <span class="number">2</span>,angle,color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="7、动画效果"><a href="#7、动画效果" class="headerlink" title="7、动画效果"></a>7、动画效果</h5><p>将画布的大小分成30，每50ms加一份，以此来改变每个花瓣的大小以及初始坐标的位置，达到逐渐变大的动画效果。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> pointR = canvasWidth / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">var</span> cw = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> aT = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> cwSpeed = canvasWidth / <span class="number">30</span>;<span class="comment">// 画布大小增长速度</span></span><br><span class="line"><span class="keyword">var</span> aSpeed = <span class="number">45</span> / <span class="number">30</span>;</span><br><span class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cw &lt; canvasWidth)</span><br><span class="line">    &#123;</span><br><span class="line">        cw += cwSpeed;</span><br><span class="line">        ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasWidth, canvasWidth);</span><br><span class="line">        ctx.fill();</span><br><span class="line">        draw(cw, pointR, aT);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ctx.globalAlpha = <span class="number">0</span>;</span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">50</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>canvas</tag>
      </tags>
  </entry>
</search>
